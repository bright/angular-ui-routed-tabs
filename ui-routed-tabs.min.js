"use strict";!function(angular){var module=angular.module("ui-routed-tabs",[]);module.controller("RoutedTabsetController",["$scope", function($scope){var ctrl=this,tabs=ctrl.tabs=$scope.tabs=[];ctrl.select=function(selectedTab){angular.forEach(tabs,function(tab){tab.active&&tab!==selectedTab&&(tab.active=!1)}),selectedTab.active=!0},ctrl.addTab=function(tab){tabs.push(tab),1===tabs.length?tab.active=!0:tab.active&&ctrl.select(tab)},ctrl.removeTab=function(tab){var index=tabs.indexOf(tab);if(tab.active&&tabs.length>1&&!destroyed){var newActiveIndex=index==tabs.length-1?index-1:index+1;ctrl.select(tabs[newActiveIndex])}tabs.splice(index,1)};var destroyed;$scope.$on("$destroy",function(){destroyed=!0})}]),module.run(["$templateCache", function($templateCache){$templateCache.put("template/tabs/routed-tabset.html","<div>\n  <ul class=\"nav nav-{{type || 'tabs'}}\" ng-class=\"{'nav-stacked': vertical, 'nav-justified': justified}\" ng-transclude></ul>\n</div>\n"),$templateCache.put("template/tabs/routed-tab.html",'<li ng-class="{active: active, disabled: disabled}">\n  <a href ng-click="select()" routed-tab-heading-transclude></a>\n</li>\n')}]),module.directive("routedTabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"RoutedTabsetController",templateUrl:"template/tabs/routed-tabset.html",link:function(scope,element,attrs){scope.vertical=angular.isDefined(attrs.vertical)?scope.$parent.$eval(attrs.vertical):!1,scope.justified=angular.isDefined(attrs.justified)?scope.$parent.$eval(attrs.justified):!1}}}),module.directive("routedTab",["$parse", "$state", "$rootScope", function($parse,$state,$rootScope){function any(array,predicate){for(var key in array)if(array.hasOwnProperty(key)&&predicate(array[key]))return!0;return!1}return{require:"^routedTabset",restrict:"EA",replace:!0,templateUrl:"template/tabs/routed-tab.html",transclude:!0,scope:{heading:"@",otherActiveRoutes:"@"},controller:function(){},compile:function($template,$attrs,transclude){return function($scope,$element,$attrs,tabsetCtrl){var observedRoutes=$parse($attrs.otherActiveRoutes)($scope)||[];observedRoutes.push($attrs.uiSref);var updateActive=function(){var active=any(observedRoutes,function(route){return 0===$state.current.name.indexOf(route)});active&&tabsetCtrl.select($scope)},unbindStateChangeSuccess=$rootScope.$on("$stateChangeSuccess",updateActive),unbindStateChangeError=$rootScope.$on("$stateChangeError",updateActive),unbindStateChangeCancel=$rootScope.$on("$stateChangeCancel",updateActive),unbindStateNotFound=$rootScope.$on("$stateNotFound",updateActive);$scope.$on("$destroy",unbindStateChangeSuccess),$scope.$on("$destroy",unbindStateChangeError),$scope.$on("$destroy",unbindStateChangeCancel),$scope.$on("$destroy",unbindStateNotFound),$scope.disabled=!1,$attrs.disabled&&$scope.$parent.$watch($parse($attrs.disabled),function(value){$scope.disabled=!!value}),$scope.select=function(){$scope.disabled||($scope.active=!0)},tabsetCtrl.addTab($scope),$scope.$on("$destroy",function(){tabsetCtrl.removeTab($scope)}),$scope.headingElement=$scope.heading,$scope.heading||($scope.headingElement=transclude($scope.$parent)),updateActive()}}}}]),module.directive("routedTabHeadingTransclude",function(){return{restrict:"A",require:"^routedTab",link:function($scope,$element){$scope.$watch("headingElement",function(heading){heading&&($element.html(""),$element.append(heading))})}}})}(angular);